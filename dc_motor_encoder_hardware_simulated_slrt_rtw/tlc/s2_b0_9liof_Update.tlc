%implements s2_b0_9liof_Update "C"

%function Update(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real_T *lastU;
%closefile localVarDecl
/* Update for Derivative: '<Root>/Derivative1' */
if (dc_motor_encoder_hardware_simulated_DW.TimeStampA == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    dc_motor_encoder_hardware_simulated_DW.TimeStampA = %<(SLibCG_SE(LibGetT()))>;
    lastU = &dc_motor_encoder_hardware_simulated_DW.LastUAtTimeA;
} else if (dc_motor_encoder_hardware_simulated_DW.TimeStampB == %<LibGetMathConstant(LibRealNonFinite("inf"), FcnGetDataTypeIdFromName("double"))>) {
    dc_motor_encoder_hardware_simulated_DW.TimeStampB = %<(SLibCG_SE(LibGetT()))>;
    lastU = &dc_motor_encoder_hardware_simulated_DW.LastUAtTimeB;
} else if (dc_motor_encoder_hardware_simulated_DW.TimeStampA < dc_motor_encoder_hardware_simulated_DW.TimeStampB) {
    dc_motor_encoder_hardware_simulated_DW.TimeStampA = %<(SLibCG_SE(LibGetT()))>;
    lastU = &dc_motor_encoder_hardware_simulated_DW.LastUAtTimeA;
} else {
    dc_motor_encoder_hardware_simulated_DW.TimeStampB = %<(SLibCG_SE(LibGetT()))>;
    lastU = &dc_motor_encoder_hardware_simulated_DW.LastUAtTimeB;
}
*lastU = dc_motor_encoder_hardware_simulated_B.ErrorSignal;
/* End of Update for Derivative: '<Root>/Derivative1' */
%closefile cfgTxt
%<cfgTxt>
%<LibSetSystemField(system, "CachedUpdateLocalVars", localVarDecl)>
%endfunction
%function UpdateFcnProtoType(block, system) Output
%assign fcnProtoType = ""
%openfile fcnProtoType
static void Update(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 3, fcnProtoType)>
%endfunction
